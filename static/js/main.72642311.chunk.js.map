{"version":3,"sources":["components/Header/Header.styles.js","components/Header/Header.component.jsx","components/Main/Main.styles.js","components/Home/Home.styles.js","components/Home/Home.component.jsx","components/Main/Main.component.jsx","components/SwitchMode/SwitchMode.component.jsx","App.js","serviceWorker.js","index.js"],"names":["HeaderWrapper","styled","header","open","SideNav","ul","ItemSpan","span","Logo","li","ListItem","ItemLink","a","HomeIcon","Home2","UserIcon","User","CogIcon","Cog","ContactIcon","ProjectDiagram","ContactMail","BottomNav","div","SocialLink","GithubIcon","Github","FacebookIcon","FacebookSquare","LinkedinIcon","LinkedinSquare","DevToIcon","DevTo","ArrowLeft","AngleDoubleRight","Header","useState","setOpen","onClick","e","preventDefault","handleMenu","MainWrapper","main","HomeSection","TextZone","Greet","h6","TextContent","h1","Lead","p","Desc","ButtonBar","Download","Home","Main","SwitchMode","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.72642311.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Home2 } from '@styled-icons/remix-fill/Home2';\nimport { User } from '@styled-icons/fa-solid/User';\nimport { Cog } from '@styled-icons/fa-solid/Cog';\nimport { ProjectDiagram } from '@styled-icons/fa-solid/ProjectDiagram';\nimport { ContactMail } from '@styled-icons/material/ContactMail';\nimport { Github } from '@styled-icons/evaicons-solid/Github';\nimport { FacebookSquare } from '@styled-icons/boxicons-logos/FacebookSquare';\nimport { LinkedinSquare } from '@styled-icons/boxicons-logos/LinkedinSquare';\nimport { DevTo } from '@styled-icons/boxicons-logos/DevTo';\nimport { AngleDoubleRight } from '@styled-icons/fa-solid/AngleDoubleRight';\n\nexport const HeaderWrapper = styled.header`\n    position: fixed;\n    top: 0;\n    width: ${({ open }) => (!open ? '80px' : '250px')};\n    height: 100vh;\n    background-color: #0c0c14;\n    transition: width 0.6s ease;\n`;\nexport const SideNav = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n    & span {\n        display: ${({ open }) => (!open ? 'none' : 'inline')};\n    }\n`;\nexport const ItemSpan = styled.span`\n    display: none;\n    margin-left: 16px;\n`;\n\nexport const Logo = styled.li`\n    font-weight: bold;\n    text-transform: uppercase;\n    margin-bottom: 16px;\n    text-align: center;\n    color: #eee;\n    background: #141418;\n    font-size: 1.5rem;\n    letter-spacing: 0.3ch;\n    width: 100%;\n    cursor: pointer;\n\n    & svg {\n        transform: ${({ open }) => (!open ? 'rotate(0deg)' : 'rotate(-180deg)')};\n        transition: 0.6s;\n    }\n`;\nexport const ListItem = styled.li`\n    width: 100%;\n`;\nexport const ItemLink = styled.a`\n    display: flex;\n    align-items: center;\n    height: 80px;\n    color: #fff;\n    text-decoration: none;\n    transition: 0.6s;\n    &:hover {\n        color: #232313;\n        background: #fff;\n    }\n    & svg {\n        width: 24px;\n        min-width: 24px;\n        margin: 0 24px;\n    }\n`;\n\nexport const HomeIcon = styled(Home2)`\n    color: #7d9096;\n`;\nexport const UserIcon = styled(User)`\n    color: #7d9096;\n`;\nexport const CogIcon = styled(Cog)`\n    color: #7d9096;\n`;\nexport const ProjectIcon = styled(ProjectDiagram)`\n    color: #7d9096;\n`;\nexport const ContactIcon = styled(ContactMail)`\n    color: #7d9096;\n`;\n\nexport const BottomNav = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    padding-bottom: 5px;\n    width: auto;\n    transition: all 0.7s ease;\n    display: flex;\n    flex-direction: ${({ open }) => (!open ? 'column' : 'row')};\n`;\n\nexport const SocialLink = styled.a`\n    display: flex;\n    height: 22px;\n    margin-bottom: 10px;\n    cursor: pointer;\n`;\n\nexport const GithubIcon = styled(Github)`\n    color: #7d9096;\n`;\nexport const FacebookIcon = styled(FacebookSquare)`\n    color: #7d9096;\n`;\n\nexport const LinkedinIcon = styled(LinkedinSquare)`\n    color: #7d9096;\n`;\nexport const DevToIcon = styled(DevTo)`\n    color: #7d9096;\n`;\nexport const ArrowLeft = styled(AngleDoubleRight)`\n    color: #7d9096;\n`;\n","import React, { useState } from 'react';\nimport {\n    HeaderWrapper,\n    SideNav,\n    Logo,\n    ListItem,\n    ItemLink,\n    ItemSpan,\n    HomeIcon,\n    UserIcon,\n    CogIcon,\n    ProjectIcon,\n    ContactIcon,\n    BottomNav,\n    SocialLink,\n    GithubIcon,\n    FacebookIcon,\n    LinkedinIcon,\n    DevToIcon,\n    ArrowLeft,\n} from './Header.styles.js';\nconst Header = () => {\n    const [open, setOpen] = useState(false);\n\n    const handleMenu = e => {\n        e.preventDefault();\n        setOpen(!open);\n    };\n    return (\n        <HeaderWrapper open={open}>\n            <SideNav open={open}>\n                <Logo onClick={e => handleMenu(e)} open={open}>\n                    <ItemLink>\n                        <ItemSpan>Corvus</ItemSpan>\n                        <ArrowLeft />\n                    </ItemLink>\n                </Logo>\n                <ListItem>\n                    <ItemLink>\n                        <HomeIcon />\n                        <ItemSpan>Home</ItemSpan>\n                    </ItemLink>\n                </ListItem>\n                <ListItem>\n                    <ItemLink>\n                        <UserIcon />\n                        <ItemSpan>About</ItemSpan>\n                    </ItemLink>\n                </ListItem>\n                <ListItem>\n                    <ItemLink>\n                        <CogIcon />\n                        <ItemSpan>Skills</ItemSpan>\n                    </ItemLink>\n                </ListItem>\n                <ListItem>\n                    <ItemLink>\n                        <ContactIcon />\n                        <ItemSpan>Contact</ItemSpan>\n                    </ItemLink>\n                </ListItem>\n            </SideNav>\n            <BottomNav open={open}>\n                <SocialLink>\n                    <GithubIcon />\n                </SocialLink>\n                <SocialLink>\n                    <FacebookIcon />\n                </SocialLink>\n                <SocialLink>\n                    <LinkedinIcon />\n                </SocialLink>\n                <SocialLink>\n                    <DevToIcon />\n                </SocialLink>\n            </BottomNav>\n        </HeaderWrapper>\n    );\n};\n\nexport default Header;\n","import styled from 'styled-components';\nexport const MainWrapper = styled.main``;\n","import styled from 'styled-components';\n\nexport const HomeSection = styled.div`\n    left: 250px;\n    position: absolute;\n    height: 100%;\n    width: calc(100% - 250px);\n    background: #10101a;\n`;\n\nexport const TextZone = styled.div`\n    position: absolute;\n    left: 10%;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 40%;\n    max-height: 90%;\n`;\n\nexport const Greet = styled.h6`\n    color: #fff;\n    font-weight: 500;\n    font-size: 25px;\n`;\nexport const TextContent = styled.h1`\n    color: #fff;\n    font-size: 48px;\n`;\n\nexport const Lead = styled.p`\n    color: #fff;\n    font-size: 18px;\n    font-weight: 500;\n`;\nexport const Desc = styled.p`\n    font-size: 18px;\n`;\nexport const ButtonBar = styled.div`\n    padding-top: 15px;\n`;\nexport const Download = styled.a`\n    display: inline-block;\n    background: #2fbf71;\n    color: #fff;\n    box-shadow: 4px 4px #fff;\n    cursor: pointer;\n    padding: 0 25px;\n    line-height: 42px;\n    position: relative;\n    border: 1px solid transparent;\n    font-size: 14px;\n    font-weight: 400;\n    letter-spacing: 2px;\n    text-decoration: none;\n    transition: ease all 0.4s;\n    &:hover {\n        background: #fff;\n        box-shadow: 4px 4px #2fbf71;\n        color: #2fbf71;\n    }\n`;\n","import React from 'react';\nimport {\n    HomeSection,\n    TextZone,\n    Greet,\n    TextContent,\n    Lead,\n    Desc,\n    ButtonBar,\n    Download,\n} from './Home.styles';\nconst Home = () => {\n    return (\n        <HomeSection>\n            <TextZone>\n                <Greet>Hello, I am </Greet>\n                <TextContent>Prince Kumar </TextContent>\n                <Lead>I Am Passionate Full-stack Developer</Lead>\n                <Desc>\n                    I design and develop services for customers of all sizes, specializing in\n                    creating stylish, modern websites, web services and online stores.\n                </Desc>\n                <ButtonBar>\n                    <Download>Download CV</Download>\n                </ButtonBar>\n            </TextZone>\n        </HomeSection>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport { MainWrapper } from './Main.styles';\n//Components\nimport Home from '../Home/Home.component';\nconst Main = () => {\n    return (\n        <MainWrapper>\n            <Home />\n        </MainWrapper>\n    );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst SwitchMode = () => {\n    return <div></div>;\n};\n\nexport default SwitchMode;\n","import React from 'react';\nimport Header from './components/Header/Header.component';\nimport Main from './components/Main/Main.component';\nimport SwitchMode from './components/SwitchMode/SwitchMode.component';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Main />\n            <SwitchMode />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}